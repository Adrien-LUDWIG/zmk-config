#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <locale/keys_fr.h>

#include "zmk-helpers/helper.h"
#include "zmk-helpers/key-labels/36.h"

#define LEFT_HAND_KEYS  LT0 LT1 LT2 LT3 LT4 LM0 LM1 LM2 LM3 LM4 LB0 LB1 LB2 LB3 LB4
#define RIGHT_HAND_KEYS RT0 RT1 RT2 RT3 RT4 RM0 RM1 RM2 RM3 RM4 RB0 RB1 RB2 RB3 RB4
#define THUMBS_KEYS     LH2 LH1 LH0 RH0 RH1 RH2  
#define NAV   1
#define NUM   2
#define MEDIA 3
#define FUN   4
#define MOUSE 5

// TODO:
// Ergo-L diagram layout
// Fun layer: combo?
// Mouse layer: pinky?
// Copy/paste shortcuts

/ {
    behaviors {
        hml: home_row_mod_left {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            require-prior-idle-ms = <150>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            bindings = <&kp>, <&kp>;
            hold-trigger-key-positions = <RIGHT_HAND_KEYS THUMBS_KEYS>;
            hold-trigger-on-release;
        };
        hmr: home_row_mod_right {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            require-prior-idle-ms = <150>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            bindings = <&kp>, <&kp>;
            hold-trigger-key-positions = <LEFT_HAND_KEYS THUMBS_KEYS>;
            hold-trigger-on-release;
        };
    };
};

/ {
	keymap {
		compatible = "zmk,keymap";
		
		default_layer {
			bindings = <
    &none            &kp FR_A         &kp FR_Z         &kp FR_E         &kp FR_R         &kp FR_T         &kp FR_Y          &kp FR_U         &kp FR_I         &kp FR_O         &kp FR_P         &none
	&none            &hml LGUI FR_Q   &hml LALT FR_S   &hml LCTRL FR_D  &hml LSHIFT FR_F &kp FR_G         &kp FR_H          &hmr RSHIFT FR_J  &hmr RCTRL FR_K  &hmr LALT FR_L   &hmr RGUI FR_M   &none
    &none            &kp FR_W         &kp FR_X         &kp FR_C         &kp FR_V         &kp FR_B         &kp FR_N          &kp FR_COMMA     &kp FR_SEMI      &kp FR_COLON     &kp FR_EXCL      &none
			                                           &none            &lt NUM ESC      &lt NAV BSPC     &mt RALT FR_SPACE &lt MEDIA ENTER  &none
			>;
		};
		nav_layer {
			bindings = <
	&none            &none            &none            &none            &none            &none            &none             &none            &none            &none            &none            &none
    &none            &kp LGUI         &kp LALT         &kp LCTRL        &kp LSHIFT       &none            &kp CAPSLOCK      &kp LEFT         &kp DOWN         &kp UP           &kp RIGHT        &none 
    &none            &none            &none            &none            &none            &none            &kp INSERT        &kp HOME         &kp PAGE_DOWN    &kp PAGE_UP      &kp END          &none 
			                                           &none            &none            &none            &kp TAB           &kp DEL          &none
			>;
		};
		num_layer {
			bindings = <
    &none            &none            &none            &none            &none            &none            &kp FR_SLASH      &kp N7           &kp N8           &kp N9           &none            &none
 	&none            &kp LGUI         &kp LALT         &kp LCTRL        &kp LSHIFT       &none            &kp FR_MINUS      &kp N4           &kp N5           &kp N6           &kp N0           &none 
    &none            &none            &none            &none            &none            &none            &kp FR_COMMA      &kp N1           &kp N2           &kp N3           &kp FR_DOT       &none 
	                                                   &none            &none            &none            &kp TAB           &kp DEL          &none
			>;
		};
		media_layer {
			bindings = <
	&none            &none            &none            &none            &none            &none            &none             &none            &none            &none            &none            &none
	&none            &none            &none            &none            &none            &none            &none             &none            &none            &none            &none            &none
	&none            &none            &none            &none            &none            &none            &none             &none            &none            &none            &none            &none
			                                           &none            &none            &none            &none             &none            &none
			>;
		};
	};
};

/ {
    combos {
        compatible = "zmk,combos";
        combo_caps_word {
            timeout-ms = <50>;
            // FIXME: key labels are wrong
            key-positions = <LM1 RM1>;
            bindings = <&caps_word>;
            require-prior-idle-ms = <150>;
            // FIXME: m capted as ; (US) so stoping caps word
            // FIXME: symbols for keyboard stop caps word despite being letters on Ergo-L
        };
    };
};
